// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mozhdekzm/todo-gql-ice/internal/interface/publisher (interfaces: StreamPublisher)

// Package publisher is a generated GoMock package.
package publisher

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/mozhdekzm/gqlgql/internal/domain"
	publisher "github.com/mozhdekzm/gqlgql/internal/interface/publisher"
)

// MockStreamPublisher is a mock of StreamPublisher interface.
type MockStreamPublisher struct {
	ctrl     *gomock.Controller
	recorder *MockStreamPublisherMockRecorder
}

// MockStreamPublisherMockRecorder is the mock recorder for MockStreamPublisher.
type MockStreamPublisherMockRecorder struct {
	mock *MockStreamPublisher
}

// NewMockStreamPublisher creates a new mock instance.
func NewMockStreamPublisher(ctrl *gomock.Controller) *MockStreamPublisher {
	mock := &MockStreamPublisher{ctrl: ctrl}
	mock.recorder = &MockStreamPublisherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStreamPublisher) EXPECT() *MockStreamPublisherMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockStreamPublisher) Publish(arg0 context.Context, arg1 domain.TodoItem) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish.
func (mr *MockStreamPublisherMockRecorder) Publish(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockStreamPublisher)(nil).Publish), arg0, arg1)
}

// Read mocks base method.
func (m *MockStreamPublisher) Read(arg0 context.Context, arg1 string, arg2 int64) ([]publisher.StreamMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", arg0, arg1, arg2)
	ret0, _ := ret[0].([]publisher.StreamMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockStreamPublisherMockRecorder) Read(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockStreamPublisher)(nil).Read), arg0, arg1, arg2)
}
